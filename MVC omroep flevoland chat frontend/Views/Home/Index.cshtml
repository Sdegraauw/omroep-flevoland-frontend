@{
    ViewData["Title"] = "Home Chat";
}

@model API

<div>
    <flowise-fullchatbot></flowise-fullchatbot>
</div>
<head>
    <title>File Searcher</title>
    <style>
        .status-icon {
            display: none;
            font-size: 24px;
        }
        /* asds */
            .status-icon.success {
                color: green;
            }

            .status-icon.error {
                color: red;
            }
    </style>
</head>
<body>
    <form id="fileUploadForm" method="post" enctype="multipart/form-data">
        <input type="file" id="fileUpload" name="fileUpload" accept=".pdf" />
        <input type="button" id="uploadButton" value="Upload" />
        <span id="uploadSuccess" class="status-icon success">&#10003;</span>
        <span id="uploadError" class="status-icon error">&#10007;</span>
    </form>
</body>

<script>
    async function FileUpload(formData) {
        const response = await fetch(
            '@Model.BaseUrl' + '/api/v1/vector/upsert/' + '@Model.FlowID',
            {
                method: "POST",
                body: formData
            }
        );
        const result = await response.json();
        return result;
    }

    function changeUploadStatus(response) {
        if (response) {
            console.log(response);
            document.getElementById('uploadSuccess').style.display = 'inline';
            document.getElementById('uploadError').style.display = 'none';
        }
        else {
            document.getElementById('uploadSuccess').style.display = 'none';
            document.getElementById('uploadError').style.display = 'inline';
        }
    }

    document
    .getElementById('uploadButton')
    .addEventListener('click',async function () {
            let file = document.getElementById('fileUpload').files[0];

        if (file) {
            let reader = new FileReader();
            reader.readAsText(file);

            let formData = new FormData();
            formData.append("files", file);
            formData.append("returnSourceDocuments", true);
            
            try { response = await FileUpload(formData); }
            catch (e) { response = null }
            changeUploadStatus(response);
        } else {
            console.error("geen bestand geselecteerd.");
        }
    });
</script>
<script type="module">
    import Chatbot from 'https://cdn.jsdelivr.net/npm/flowise-embed/dist/web.js';
    document.addEventListener('DOMContentLoaded', () => {

        Chatbot.initFull({
            chatflowid: '@Model.FlowID',
            apiHost: '@Model.BaseUrl',
            theme: {
                button: {
                    backgroundColor: '#bf2133',
                },
            
                chatWindow: {
                    welcomeMessage: 'hallo, waar kan ik je mee helpen?',
                    backgroundColor: 'floralWhite',
                    height: (screen.height / 1.5),
                    width: (screen.width / 1.5),
                    fontSize: 16,
                    poweredByTextColor: '#303235',
                    botMessage: {
                        backgroundColor: 'floralwhite',
                        textColor: '#303235',
                        showAvatar: false
                    },
                    userMessage: {
                        backgroundColor: '#f9dbdb',
                        textColor: '#303235',
                        showAvatar: false,
                    },
                    textInput: {
                        placeholder: 'Type hier je vraag',
                        backgroundColor: '#ffffff',
                        textColor: '#303235',
                        sendButtonColor: '#bf2133',
                    }
                }
                
            }
        });
    });
</script>